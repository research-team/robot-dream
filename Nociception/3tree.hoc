create soma, treeA[1]
access soma
objectvar f

begintemplate Sin
objref list, diff1[1],p2x30[1] 
public diff1,p2x30
public list
proc init(){
nsyn =$1
objectvar diff1[nsyn],p2x30[nsyn]
list= new List()
for i=0, nsyn-1 {
diff1[i]=new AtP_4(0.5)
p2x30[i] = new p2x3(0.5)
diff1[i].c0cleft = 3
diff1[i].Deff = 0.08
p2x30[i].Ev = -40
p2x30[i].gmax = 30
setpointer p2x30[i].patp, diff1[i].atp
}
diff1[0].h =$2
//diff1[1].h =$2
//diff1[0].k = 0
//diff1[1].k = 0
diff1[0].tx1 = $5
//diff1[1].tx1 = $5
//diff1[2].h =$6
//diff1[3].h =$7
//diff1[2].tx1 = $8
//diff1[3].tx1 = $9
for i=0, nsyn-1 {
 list.append(diff1[i])
}
}
endtemplate Sin

n=1
soma {
    nseg = 1
    diam = 18.8
    L = 18.8
    Ra = 123.0
    insert hh
    gnabar_hh=0.25
    gl_hh = .0002
    el_hh = -60.0
    gkbar_hh = 0.36
}

f = new File()

f.ropen("./topologies/modeltree3.dat")
ndendA = f.scanvar() 
create treeA[ndendA]
objref GrCell[ndendA]


for i = 0,ndendA-1 {
      
  me = f.scanvar() - 1 // sets the current branch/section 
  child1 = f.scanvar() - 1 
  child2 = f.scanvar() - 1 
  child3 = f.scanvar() - 1 

  treeA[me]{ 
    nseg = 1
    diam = f.scanvar()
    L = f.scanvar()
    Ra = 123

    pt3dclear()

    pt3dadd(f.scanvar(),f.scanvar(),f.scanvar(),diam)

    x = f.scanvar()
    y = f.scanvar()
    z = f.scanvar()

    pt3dadd(x, y, z,diam)

    if(me > 10){
        h1 = (0.00001)*((25000-x)*(25000-x) + (400-y)*(400-y) + (1-z)*(1-z))
        h2 = (0.00001)*((24000-x)*(25000-x) + (-400-y)*(-400-y) + (1-z)*(1-z))
        h3 = (0.00001)*((5000-x)*(5000-x) + (10-y)*(10-y) + (1-z)*(1-z))
        //h4 = (0.00001)*((10000-x)*(10000-x) + (10-y)*(10-y) + (1-z)*(1-z))

        GrCell[me] = new Sin(n, h1, h2, 40, 90, h2, h1, 100, 220)

    }

    insert nav18
    gbar_nav18 = 0.0015
    slow_inact_nav18=1
    insert na_ion
    ena = 50
    insert na17a
    gbar_na17a=5.2
    insert extracellular
    xg = 1000
    xc = 300
    //xraxial = 100
    insert nap
    gbar_nap = 0.00014
    insert nafast
    gbar_nafast=0.02
    insert naslow
    gbar_naslow=0.02

    insert kv       
    gbar_kv = 60
    ek = -77
    insert kdr0
    gbar_kdr0 = 0.4
      
    insert kad 
    gbar_kad = 0.15
    insert kap   
    gbar_kap = 0.15


    if (child1 >= 0) {
      connect treeA[child1](0), 1
    }

    if (child2 >= 0) {
      connect treeA[child2](0), 1
    }

    if (child3 >= 0) {
      connect treeA[child3](0), 1
    }

  }
}

f.close() //closes the file data holder called f
connect treeA[0](0), soma(1) 

print soma.v

{load_file("./session/1111.ses")}

{load_file("recording.hoc")}

// Connect things together 

forall psection()


