begintemplate treeCell
public dend, f, GrCell, connect2target
create dend[1]
objectvar f
objref GrCell

{load_file("atpDiff.hoc")}

proc init(){
    objectvar f

    dend_diam = 1      
    dend_len = 150      
    dend_nseg = 1
    dend_cm = 0.8
    dend_Ra = 120*$2*2

    n=6
    p=$3

f = new File()

f.ropen("./topologies/modeltree2.dat")
ndendA = f.scanvar() 
create dend[ndendA]
objref GrCell


for i = 0,ndendA-1 {
      
  me = f.scanvar() - 1 // sets the current branch/section 
  child1 = f.scanvar() - 1 
  child2 = f.scanvar() - 1 
  child3 = f.scanvar() - 1 

  dend[me]{ 
        nseg = dend_nseg
        diam = f.scanvar()
        L = f.scanvar()
        
        diam = $2
        L = dend_len
        Ra = dend_Ra
        cm = dend_cm

        pt3dclear()

        pt3dadd(f.scanvar(),f.scanvar(),f.scanvar(),diam)

        x = f.scanvar()
        y = f.scanvar()
        z = f.scanvar()

        pt3dadd(x, y, z,diam)


        h = sqrt((2500-x)*(2500-x)+(0-y)*(0-y)+(0-z)*(0-z))
            
        GrCell = new ATPdiff(n, 0.0001*h, $1, $4, 1)

        if(p == 1){
            insert nav18
            gbar_nav18 = 0.002
            slow_inact_nav18=1
            insert nap
            gbar_nap = 0.0002
        }
        insert na_ion
        ena = 50
        insert na17a
        gbar_na17a=5.2
        insert extracellular
        xg = 1000
        xc = 300
        //xraxial = 100

        insert nafast
        gbar_nafast=0.022 
        insert naslow
        gbar_naslow=0.022

        insert kv       
        gbar_kv = 65
        ek = -77
        insert kdr0
        gbar_kdr0 = 0.2
          
        insert kad 
        gbar_kad = 0.15 //+ $2*0.01
        insert kap    
        gbar_kap = 0.15 //+ $2*0.01

        if (child1 >= 0) {
          connect dend[child1](0), 1
        }

        if (child2 >= 0) {
          connect dend[child2](0), 1
        }

        if (child3 >= 0) {
          connect dend[child3](0), 1
        }

    }
}

f.close() //closes the file data holder called f
connect dend[0](0), soma(1) 
}
obfunc connect2target() { localobj nc //$o1 target point process, optional $o2 returned NetCon
  soma nc = new NetCon(&v(1), $o1)
  nc.threshold = 10
  if (numarg() == 2) { $o2 = nc } // for backward compatibility
  return nc
}

endtemplate treeCell
