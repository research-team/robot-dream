create soma, treeA[1], treeB[1]

v_init = -80
tstop = 80 
dt = 0.01
celsius = 37

access soma
objectvar f

begintemplate Sin
objref list, diff1[1],p2x30[1] 
public diff1,p2x30
public list

proc init(){
nsyn =$1
objectvar diff1[nsyn],p2x30[nsyn]
list= new List()
for i=0, nsyn-1 {
diff1[i]=new AtP_3(0.5)
p2x30[i] = new p2x3(0.5)
diff1[i].h =$2
setpointer p2x30[i].patp, diff1[i].atp
}
for i=0, nsyn-1 {
 list.append(diff1[i])
}
}
endtemplate Sin

n=2
soma {
    nseg = 1
    diam = 18.8
    L = 18.8
    Ra = 123.0
    insert hh
    insert pas
}

insert hh
gnabar_hh= 0.25
gl_hh = .0001666 
el_hh = -60.0
insert pas

f = new File()

f.ropen("treeA.dat")
ndendA = f.scanvar() 
create treeA[ndendA]
objref GrCell[ndendA]


for i = 0,ndendA-1 {
      
  me = f.scanvar() - 1 // sets the current branch/section 
  child1 = f.scanvar() - 1 
  child2 = f.scanvar() - 1

  treeA[me]{ 
    nseg = 1
    diam = f.scanvar()
    L = f.scanvar()
    Ra = 123

    pt3dclear()

    pt3dadd(f.scanvar(),f.scanvar(),f.scanvar(),diam)

    x = f.scanvar()
    y = f.scanvar()
    z = f.scanvar()

    pt3dadd(x, y, z,diam)

    h = (0.0001)*x*x + (0.0001)*y*y + (0.0001)*z*z
    GrCell[me] = new Sin(n,h)

    insert pas
    g_pas = .0001666
    e_pas = -60.0

    if (child1 >= 0) {
      connect treeA[child1](0), 1
    }

    if (child2 >= 0) {
      connect treeA[child2](0), 1
    }
  }
}

f.close() //closes the file data holder called f

f.ropen("treeB.dat")
ndendB = f.scanvar() 
create treeB[ndendB]

objref GrCell2[ndendB]

for i = 0,ndendB-1 {
      
  me = f.scanvar() - 1 // sets the current branch/section 
  child1 = f.scanvar() - 1 
  child2 = f.scanvar() - 1

  treeB[me]{ 
    nseg = 1
    diam = f.scanvar()
    L = f.scanvar()
    Ra = 123

    pt3dclear()

    pt3dadd(f.scanvar(),f.scanvar(),f.scanvar(),diam)
    
    x = f.scanvar()
    y = f.scanvar()
    z = f.scanvar()

    pt3dadd(x, y, z,diam)

    h = (0.0001)*x*x + (0.0001)*y*y + (0.0001)*z*z
    GrCell[me] = new Sin(n,h)

    insert pas
    g_pas = .0001666
    e_pas = -60.0

    if (child1 >= 0) {
      connect treeB[child1](0), 1
    }

    if (child2 >= 0) {
      connect treeB[child2](0), 1
    }
  }
}

f.close() //closes the file data holder called f

// Connect things together 
connect treeA[0](0), soma(1) 
connect treeB[0](0), soma(0)

print soma.v

forall psection()

finitialize(v_init)

