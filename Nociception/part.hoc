create soma, dend[1]
access soma

begintemplate Sin
objref list, diff1[1],p2x30[1] 
public diff1,p2x30
public list

proc init(){
nsyn =$1
objectvar diff1[nsyn],p2x30[nsyn]
list= new List()
for i=0, nsyn-1 {
diff1[i]=new AtP_4(0.5)
p2x30[i] = new p2x3(0.5)
diff1[i].h =$2
diff1[i].Deff = 0.4
p2x30[i].Ev = -40
//p2x30[i].gmax = 25
setpointer p2x30[i].patp, diff1[i].atp
}
diff1[0].tx1 = 5
//diff1[1].tx1 = 30
//diff1[2].tx1 = 25
p2x30[0].gmax = 50
//p2x30[1].gmax = 25
//p2x30[2].gmax = 35
for i=0, nsyn-1 {
 list.append(diff1[i])
}
}
endtemplate Sin

ndend = 2

soma {
  nseg = 1
  diam = 18.8
  L = 18.8
  Ra = 123.0
  //insert hh
}

//insert hh
//insert pas

n = 1

objref GrCell[ndend]

dend[0] {
    nseg = 1
    diam = 1.18
    L = 250
    Ra = 123

    insert hh
    gnabar_hh= 2
    gkbar_hh= 0.7
    gl_hh= 0.0005 
    insert pas
    g_pas = .0001667
    e_pas = -60.0

    h = 0.15

    GrCell[0] = new Sin(n,h)
    /*insert na_ion
    ena = 50
    insert na17a
    gbar_na17a=15.2
    insert extracellular
    xg = 1000
    xc = 300
    //xraxial = 100

    //insert nap
    //gbar_nap = 0.00015
    insert nafast
    gbar_nafast=0.022
    insert naslow
    gbar_naslow=0.022

    insert kv       
    gbar_kv = 60
    ek = -77
    insert kdr0
    gbar_kdr0 = 0.2
      
    insert kad 
    gbar_kad = 0.15
    insert kap    
    gbar_kap = 0.15

  /*  insert bk
    gbar_bk = 0.01

    insert cal
    gbar_cal = 0.003

    insert sk
    gkbar_sk = 0.01
       

    insert cat
    eca = 126.1
    gmax_cat=0.001
*/
   
}

{load_file("./session/2222.ses")}

// Connect things together
connect dend[0](0), soma(0)

// create an electrode in the soma
proc epochrun() { local i, n, j
    running_ = 1
    tstop = $1*$2+$1*$3 // in case some other code needs tstop
    stdinit()
    for n=0,$1 - 1 {
        print(AtP_4[0].tx1)
            AtP_4[0].tx1 = 20
        print(AtP_4[0].tx1)
        continuerun(t+$2)
        print(AtP_4[0].tx1)
            AtP_4[0].tx1 = t+20
        print(AtP_4[0].tx1)
        continuerun(t+$3)
        }
}
epochrun(1, 100000, 1000)

forall psection()

