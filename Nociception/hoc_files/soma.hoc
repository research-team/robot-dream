create soma, treeA[1], treeB[1]

tstop = 80 

access soma
objectvar f

n=2
soma {
    nseg = 1
    diam = 18.8
    L = 18.8
    Ra = 123.0
}


f = new File()

f.ropen("treeA.dat")
ndendA = f.scanvar() 
create treeA[ndendA]
objref GrCell[ndendA]


for i = 0,ndendA-1 {
      
  me = f.scanvar() - 1 // sets the current branch/section 
  child1 = f.scanvar() - 1 
  child2 = f.scanvar() - 1

  treeA[me]{ 
    nseg = 1
    diam = f.scanvar()
    L = f.scanvar()
    Ra = 123

    pt3dclear()

    pt3dadd(f.scanvar(),f.scanvar(),f.scanvar(),diam)

    x = f.scanvar()
    y = f.scanvar()
    z = f.scanvar()

    pt3dadd(x, y, z,diam)

    insert hh
    gnabar_hh= 2
    gkbar_hh= 0.4
    gl_hh= 0.0005
    insert pas
    g_pas = .0001667
    e_pas = -60.0

    insert cat
    eca = 126.1

    h = (0.01)*((200-x)*(200-x) + (50-y)*(50-y) + (15-z)*(15-z))

    if (child1 >= 0) {
      connect treeA[child1](0), 1
    }

    if (child2 >= 0) {
      connect treeA[child2](0), 1
    }
  }
}

f.close() //closes the file data holder called f

f.ropen("treeB.dat")
ndendB = f.scanvar() 
create treeB[ndendB]

objref GrCell2[ndendB]

for i = 0,ndendB-1 {
      
  me = f.scanvar() - 1 // sets the current branch/section 
  child1 = f.scanvar() - 1 
  child2 = f.scanvar() - 1

  treeB[me]{ 
    nseg = 1
    diam = f.scanvar()
    L = f.scanvar()
    Ra = 123

    pt3dclear()

    pt3dadd(f.scanvar(),f.scanvar(),f.scanvar(),diam)
    
    x = f.scanvar()
    y = f.scanvar()
    z = f.scanvar()

    pt3dadd(x, y, z,diam)

    insert hh
    gnabar_hh= 2
    gkbar_hh= 0.4
    gl_hh= 0.0005
    insert pas
    g_pas = .0001667
    e_pas = -60.0

    insert cat
    eca = 126.1

    h = (0.01)*((280-x)*(280-x) + (100-y)*(100-y) + (145-z)*(145-z))
    GrCell2[me] = new Sin(n,h)

    if (child1 >= 0) {
      connect treeB[child1](0), 1
    }

    if (child2 >= 0) {
      connect treeB[child2](0), 1
    }
  }
}

f.close() //closes the file data holder called f

// Connect things together 
connect treeA[0](0), soma(1) 
connect treeB[0](0), soma(0)

print soma.v

forall psection()


